I"<h2 id="1장-서론">1장 서론</h2>

<p>컨테이너 기술의 활용이 사용의 편의성, 손쉬운 패키징(packaging), 배포(deploy)의 신속성(Time-to-market)의 장점으로 확산되고 있지만,
다수의 사용자들이 이미지를 변경하여 배포할 수 있다는 특징 때문에 그 과정에서 취약점들이 생성된다면 그 또한 빠르게 확산될 수도 있다는 문제가 있다.
이러한 위험성은 아래와 같은 다른 연구들에서도 보고된 적이 있다. [<a href="#1">1</a>, <a href="#2">2</a>, <a href="#3">3</a>]
문제가 인식되어서 여러 해결책들 또한 개발되고 있다.[<a href="#9">9</a>, <a href="#10">10</a>, <a href="#11">11</a>, <a href="#12">12</a>]
하지만 아직도 컨테이너의 취약성에 대해서는 연구해야 할 측면이 많다. [<a href="#2">2</a>, <a href="#4">4</a>, <a href="#7">7</a>, <a href="#13">13</a>, <a href="#14">14</a>]</p>

<p>다음과 같은 <strong>의문</strong>들에 대한 <strong>해답</strong>을 구해야한다.</p>

<ul>
  <li>컨테이너 이미지 당 평균 취약점은 얼마나 되는 가?</li>
  <li>어떠한 취약점들이 가장 많이 발견되는가?</li>
  <li>취약점이 보완되기 까지는 얼마나 걸리는가?</li>
  <li>컨테이너를 사용하면 나의 시스템에 보안 측면에서 어떠 한 직간접적인 영향이 있는가?</li>
</ul>

<p>연구의 <strong>방향</strong>은</p>

<ul>
  <li>약 만여 개의 도커 컨테이너 이미지를 분석하여서 컨테이너 이미지 스캐닝 도구인 ASC(Agentless-system-crawler)를 사용하여
컨테이너 이미지의 OS정보, 파일들의 메타데이터, 설치된 패키지들의 목록과 버전 그리고 지정된 설정파일들의 내용 등을 추출한다.</li>
  <li>추출한 데이터들은 데이터베이스에 저장되어 분석 모듈에서 필요한 정보를 질의할 때에 사용된다.
분석 모듈은 각 이미지 별 취약성 결과를 다시 데이터베이스에 저장한다.</li>
</ul>

<p>연구에서 <strong>분석한 정보</strong>는</p>

<ul>
  <li>컨테이너 이미지들의 기본 OS 정보 통계 분류</li>
  <li>권장 보안 규칙(Compliance Rule)들의 부합 정도</li>
  <li>설치된 패키디들의 취약점(Package Vulnerability)</li>
</ul>

<p><strong>결론</strong>은</p>

<ul>
  <li>99%의 컨테이너 이미지가 평균적으로 다섯 개 이상의 권장 보안 규칙을 어기고 있다.</li>
  <li>92%의 이미지에서는 평균 10개 이상의 패키지 취약점들이 발견되었다.</li>
</ul>

<p>이 분석에 대한 결과와 해석을 <strong>본문</strong>에서 설명한다.</p>
<ul>
  <li>2장: 컨테이너 이미지 분석을 수행하기 위하여 구성한 분석 플랫폼의 구조를 설명</li>
  <li>3장: OS 배포판 분포 분석, 권장 보안 규칙 부합성 분석, 패키지 취약점 분석 결과를 제시</li>
  <li>4장: 분석 결과에 대한 의미와 해석</li>
  <li>5장: 결론과 향후 계획</li>
</ul>

<h2 id="2장-컨테이너-이미지-분석-플랫폼-구조">2장 컨테이너 이미지 분석 플랫폼 구조</h2>

<p>컨테이너 이미지 보안 취약성 분석을 위한 플랫폼은
총 5개의 컴포넌트(Imnage Name Extractor, Image Scanner, Compliance Rule Analyzer, Package Vulnerability Analyzer, Package Vulnerability Info Collector)와
플랫폼의 구심점 역할을 하는 하나의 데이터베이스(Scanned Image Database - Elasticsearch 사용)로 구성되어 있다.</p>

<p>컴포넌트들 사이의 직접적인 통신이 없고 데이터베이스를 통한 간접적인 참조를 사용하기 때문에 <strong>새로운 컴포넌트를 추가, 확장 하는 것이 용이</strong>하다.</p>

<p>각 컴포넌트들의 <strong>역할</strong> 은</p>

<ul>
  <li>Image Name Extractor
    <ul>
      <li>Docker hub에 HTTP query를 하여 인기도 순으로 정렬된 컨테이너 이미지 이름들이 있는 HTML page 들을 받아 차례로 파싱한다.</li>
    </ul>
  </li>
  <li>Image Scanner는 데이터베이스에 새로운 이미지 이름이 저장되는 것을 감지하면
해당 이미지를 Docker hub로 부터 pull 한 다음 ASC [<a href="#5">5</a>, <a href="#6">6</a>] 를 사용하여 스캔하고 결과를 데이터베이스에 저장한다.
    <ul>
      <li>파일 목록, 파일 메타데이터, 패키지 리스트, 설정 파일 내용들, OS 정보 등이다</li>
    </ul>
  </li>
  <li>Compliance Rule Analyzer(권장 보안 규칙 분석기)는 대상 컨테이너 이미지가 보안 규칙들을 만족하는지를 검사하는 일을 담당한다.
    <ul>
      <li>현재 정의된 권장 규칙들은 총 40이다. [Compliance Rules][#compliance-rules-table]</li>
      <li>크게 File/Directory 권한, SSH 서버 설정, 암호 설정 등의 사항들로 분류된다.</li>
    </ul>
  </li>
</ul>

<h2 id="references">References</h2>

<ol>
  <li><a name="1"></a> B. Tak, C. Isci, S. Duri, N. Bila, S. Nadgowda, and J. Doran. Understanding security implications of using containers in the cloud.
In 2017 USENIX Annual Technical Conference (USENIX ATC 17), pages 313–319, Santa Clara, CA, 2017. USENIX Association.</li>
  <li><a name="2"></a>Gummaraju, Jayanth and Desikan,Tarun and Turner, Yoshio. Over 30% of Official Images in Docker Hub Contain High Priority Security Vulnerabilities. https://www.banyanops.com/blog/analyzing-docker-hub/</li>
  <li><a name="3"></a>Vulnerability QuickView.
https://pages.riskbasedsecurity.com/hubfs/R eports/2017/2017\%20Year\%20End\%20Vul nerability%20QuickView\%20Report.pdf</li>
  <li><a name="4"></a>R. Shu, X. Gu, and W. Enck. A study of security vulnerabilities on docker hub. In Proceedings of the Seventh ACM on Conference on Data and Application Security and Privacy, CODASPY ’17, pages 269–280, New York, NY, USA, 2017. ACM.</li>
  <li><a name="5"></a>Agentless system crawler. https://github.com/cloudviz/agentless-syste m-crawler</li>
  <li><a name="6"></a>R. Koller, C. Isci, S. Suneja, and E. de Lara. Unified monitoring and analytics in the cloud. In 7th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud 15), Santa Clara, CA, 2015. USENIX Association</li>
  <li><a name="7"></a>T. Bui. Analysis of docker security. arXiv preprint arXiv:1501.02967, 2015.</li>
  <li><a name="8"></a>Dokerhub. https://hub.docker.com/.</li>
  <li><a name="9"></a>Anchore. Open source tools for container security and compliance. http://anchore.com.</li>
  <li><a name="10"></a>Aqua. https://www.aquasec.com/.</li>
  <li><a name="11"></a>Clair. Automatic container vulnerability and security scanning for appc and docker. http://coreos.com/clair/</li>
  <li><a name="12"></a>F. Oliveira, S. Suneja, S. Nadgowda, P.
Nagpurkar, and C. Isci. Opvis: extensible, cross-platform operational visibility and analytics for cloud. In Proceedings of the 18th ACM/IFIP/USENIX Middleware Conference: Industrial Track, pages 43–49. ACM, 2017.</li>
  <li><a name="13"></a>T. Combe, A. Martin, and R. Di Pietro. To docker or not to docker: A security perspective. IEEE Cloud Computing, 3(5):54–62, 2016.</li>
  <li><a name="14"></a>E. Reshetova, J. Karhunen, T. Nyman, and N. Asokan. Security of os-level virtualization technologies. In Nordic Conference on Secure IT Systems, pages 77–93. Springer, 2014.</li>
  <li><a name="15"></a>Elasticsearch. https://www.elastic.co/</li>
</ol>

<h3 id="compliance-rules-table-권장-보안-규칙들">Compliance Rules table (권장 보안 규칙들)</h3>
<p>|Category|Rules|
|———–|————–|
|SSH Server|SSH server 는 설치되어 있으면 안된다&lt;/br&gt;SSH password-based authentication must be disabled&lt;/br&gt;PermitRootLogin must be disabled&lt;/br&gt;SSH protocol version 2 must be used|
|Password|Password max age must be 90 days&lt;/br&gt;Minimum password length 8&lt;/br&gt;PASS MIN DAYS should be larger</p>
:ET